@import "./margin";
@import "./padding";
@import "./flex";
@import "./text";
.w {
  &-full {
    width: 100%;
  }

  &-screen {
    width: 100vw;
  }

  &-auto {
    width: auto;
  }

  @for $i from 0 through 20 {
    &-#{$i} {
      width: $i * 4px;
    }
  }
}

.h {
  &-full {
    height: 100%;
  }

  &-screen {
    height: 100vh;
  }

  &-auto {
    height: auto;
  }

  @for $i from 0 through 20 {
    &-#{$i} {
      height: $i * 4px;
    }
  }
}

.max-w {
  $withs: (
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px,
  );

  &-none {
    max-width: none;
  }

  @each $key, $value in $withs {
    &-#{$key} {
      max-width: $value;
    }
  }

  &-150 {
    max-width: 600px;
  }

  &-202 {
    max-width: 808px;
  }
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  &-y {
    display: flex;
    align-items: center;
  }

  &-x {
    display: flex;
    justify-content: center;
  }
}

.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  &--wrap {
    white-space: normal;
  }
}

.block {
  display: block;
}

.inline {
  display: inline;
}

.inline-block {
  display: inline-block;
}

.hidden {
  display: none;
}

.gap {
  @for $i from 0 through 20 {
    &-#{$i} {
      gap: $i * 4px;
    }
  }
}

.divider {
  border-top: 1px solid $color-border;
  margin: 40px 0;
  &--no-space {
    margin: 0;
  }
}

.cursor {
  &-pointer {
    cursor: pointer;
  }

  &-default {
    cursor: default;
  }

  &-not-allowed {
    cursor: not-allowed;
  }
}

.md {
  @include media-query("md") {
    &--hidden {
      display: none;
    }

    &--block {
      display: block;
    }
  }
}
